package com.reception;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.naming.Context;
import javax.naming.InitialContext;

public class CL_Queue_Sender {

	private static final String CONNECTION_FACTORY = "jms/GreenkodeConnectionFactory";
    private static final String CONNECTION_QUEUE = "jms/GreenkodeQueue";
    private static final String CONNECTION_TOPIC = "jms/GreenkodeTopic";
    private static final String TOPIC_ID = "greenkodeDurableTopic";
 
    /**
     * @param args
     */
    public CL_Queue_Sender() {
        ConnectionFactory connectionFactory = null;
        Connection connection = null;
        //Get the JNDI Context
        try {
            Context jndiContext = new InitialContext();
             
            //Create the Connection Factory
            connectionFactory = (ConnectionFactory) jndiContext.lookup(CL_Queue_Sender.CONNECTION_FACTORY);
            connection = connectionFactory.createConnection();
             
            //Create the session
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
             
            //Initialize Message Producer
            MessageProducer producer = null;
             
            //Call methods to send publish messages
            publishToTopic(producer, jndiContext, session, args[1]);
            publishToQueue(producer, jndiContext, session, args[0]);
             
            System.out.println("Messages Sent!!!");
        } catch (NamingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (JMSException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }finally{
            try {
                if(connection != null){
                    connection.close();
                }
            } catch (JMSException e) {
                e.printStackTrace();
            }
        }
    }
     
    private static void publishToTopic(MessageProducer producer, Context jndiContext, Session session, String message) throws NamingException, JMSException{
        //Create new topic
        Topic topic = (Topic) jndiContext.lookup(PutMessage.CONNECTION_TOPIC);
         
        //Create Message Produer
        producer = session.createProducer(topic);
         
        //Send TextMessage
        TextMessage textMessage = session.createTextMessage();
        textMessage.setText(message);
        producer.send(textMessage);
    }
     
    private static void publishToQueue(MessageProducer producer, Context jndiContext, Session session, String message) throws NamingException, JMSException{
        //Create new Queue
        Queue queue = (Queue) jndiContext.lookup(PutMessage.CONNECTION_QUEUE);
         
        //Create Message Produer
        producer = session.createProducer(queue);
         
        //Send TextMessage
        TextMessage textMessage = session.createTextMessage();
        textMessage.setText(message);
        producer.send(textMessage);
    }
- See more at: http://www.greenkode.com/2011/09/using-glassfish-and-ejb-3-0-message-driven-beans-for-java-messaging/#sthash.gzCcQdOU.dpuf
	
}
